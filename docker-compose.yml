version: "3.7"

networks:
  team-1-network:
    driver: bridge

services:
  # DATABASE
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - team-1-network

  # SONARQUBE
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: ${SONAR_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    #command: ["/vagrant/sonarqube.sh"]
    ports:
      - "8080:9000"
    networks:
      - team-1-network

  # PORTAINER
  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8082:8000"
      - "8081:9443"
    networks:
      - team-1-network
volumes:
  # SONARQUBE
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  # DATABASE
  postgresql:
  postgresql_data:
  # PORTAINER
  portainer_data:
